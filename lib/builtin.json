{ "http://www.28msec.com/modules/assertion" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   This module provides a set of assertion methods useful\n   for writing tests.\n </p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/error" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Applications written with Sausalito use this default error module\n if an error happens inside a Sausalito project.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">An error can occur during the run time of a Sausalito project on one\n of the following cases:</p>\n <ol xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>If the XQuery code raises a dynamic error that is not caught in a\n     try-catch block.</li>\n   <li>If the given XQuery program is syntactically incorrect or contains\n     other static errors.</li>\n   <li>If an explicit call to fn:error() was made and the error is not\n     caught in a try-catch block.</li>\n   <li>If a request is made to a module or a function which does\n     not exist.</li>\n   <li>If any other unexpected error happens during the processing of\n     the request.</li>\n </ol>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/http/cookie" : { "doc" : " The Sausalito Cookie module provides function to manipulate\n HTTP-Cookies.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/http/request" : { "doc" : " The Sausalito request module provides functions for accessing\n information contained in the current HTTP request. For example,\n the <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">parameter-names</tt> function can be used to retrieve all\n the names of the parameters contained in a request.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/http/response" : { "doc" : " The Sausalito response module can be used to modify the HTTP response\n that will be send as a result of this request. For example, the\n <tt xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">set-content-type</tt> function can be used to set the Content-Type\n header and determine the encoding of data in the response.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/http/util/cache" : { "doc" : " This module contains a collection of convenience functions to help\n developers work with HTTP caching options.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/http/util/diagnostic" : { "doc" : " This module provides utility functions to help with diagnostic analysis\n / debugging of RESTful Apps or webapps.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/http/util/multipart" : { "doc" : " This module provides utility functions to help dealing with the\n content of multipart requests.\n In their implementation, all the functions use the multipart\n related functions of the request module (e.g. parts() or text-part()).\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/lock" : { "doc" : " Sausalito provides a an application level locking mechanism that can be\n used e.g. to ensure exclusive access to data.\n As the store ensures atomicity of of single document updates, atomic\n updates to multiple documents are implemented using this mechanism.\n Locks can be acquired and re-acquired at any time during a request and\n are released at the end of the request.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/mongodb" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides a driver to access a\n <a href=\"http://www.mongodb.org/\">MongoDB</a> database - similar to\n drivers for other high-level languages like e.g.\n <a href=\"http://api.mongodb.org/python/current/\">PyMongo</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Here is a simple example of how we can raise the salary of each\n developer by 10%.\n Starting with an <em>employees</em> collection in MongoDB that contains\n <pre>\n { \"name\" : \"Peter\", \"role\" : \"developer\" , \"salary\" : 80 }\n { \"name\" : \"Paul\",  \"role\" : \"developer\" , \"salary\" : 75 }\n { \"name\" : \"Mary\",  \"role\" : \"manager\"   , \"salary\" : 90 } </pre>\n we can get a connection\n <pre>\n variable $conn := mongo:connect(\"hostname\", 27017, \"db\", \"user\", \"password\"); </pre>\n run this update\n <pre>\n for $emp in mongo:find($conn, \"employees\")\n where $emp(\"role\") = \"developer\"\n let $salary := $emp(\"salary\")\n return {\n   replace json value of $emp(\"salary\") with $salary * 1.1;\n   mongo:save($conn, \"employees\", $emp)\n }; </pre>\n and get the names and the current salaries using\n <pre>\n mongo:find($conn, \"employees\", {||}, { \"_id\" : false, \"role\" : false }, {||}) </pre>\n In this query we have removed the <em>_id</em> and <em>role</em> fields from\n the results and get\n <pre>\n { \"name\" : \"Peter\", \"salary\" : 88   }\n { \"name\" : \"Paul\",  \"salary\" : 82.5 }\n { \"name\" : \"Mary\",  \"salary\" : 90   } </pre>\n </p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/sequence" : { "doc" : " The sequence module allows you to generate consecutive\n application-unique xs:integer ids. This is required e.g. in accounting\n applications as some legislations require consecutive invoice numbers.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/sleep" : { "doc" : " This module provides a function to put the currently executing request\n to sleep.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/store" : { "doc" : " This modules provides functions that allow to have more\n control over the data store. For example, the flush() function\n may be used to synchronously flush all pending modifications\n and make them available to other requests.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/ws/mailchimp" : { "doc" : " Mailchimp Client Module.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.28msec.com/modules/xmlrpc" : { "doc" : " XML RPC Client Module\n This module provides the functions necessary to execute remote call\n procedures using\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.xmlrpc.com/spec\" target=\"_blank\">XML-RPC</a>.\n The application/mashup creator does not need to know the\n specifics of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.xmlrpc.com/spec\" target=\"_blank\">XML-RPC</a> to use this module.\n Usage:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xmlrpc:invoke(\"http://www.advogato.org/XMLRPC\", \"test.sumprod\", (5, 7))</pre>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xmlrpc:invoke(\"http://www.advogato.org/XMLRPC\", \"test.capitalize\", \"HelloWorld\")</pre>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">xmlrpc:invoice(\"http://www.example.com/XMLRPC\", \"test.foo\", (\"some-parameter\",\n                      &lt;struct&gt;\n                        &lt;member&gt;\n                          &lt;name&gt;Foo&lt;/name&gt;\n                          &lt;value&gt;&lt;string&gt;Bar&lt;/string&gt;&lt;/value&gt;\n                        &lt;/member&gt;\n                      &lt;/struct&gt;))</pre>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.functx.com/" : { "doc" : " --------------------------------\n The FunctX XQuery Function Library\n --------------------------------\n Copyright (C) 2007 Datypic\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License.\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n For more information on the FunctX XQuery library, contact contrib@functx.com.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/errors" : { "doc" : " This module contains one declaration of a variable for each\n error of the http://www.zorba-xquery.com/errors namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/converters/base64" : { "doc" : " Base64 encoding and decoding\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/converters/csv" : { "doc" : " Function library providing converters from CSV/TXT to XML and back.\n The functions are optimized to work with large amounts of data, in a streaming way.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/converters/html" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides functions to <a href=\"http://www.w3.org/People/Raggett/tidy/\" target=\"_blank\">tidy</a> a HTML document. <br/>\n The functions in this module take an HTML document (a string) as parameter,\n tidy it in order to result in valid XHTML, and return this XHTML document as a document-node.\n </p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/converters/json" : { "doc" : " Using this module, you can parse JSON data into XML, manipulate it like any\n other XML data using XQuery, and serialize the result back as JSON.\n There are many ways to represent JSON data in XML, some loss-less (\"round\n tripable\") and some lossy (\"one way\").  Loss-less representations preserve\n the JSON data types <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">boolean</i>, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">number</i>, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">null</i>; lossy\n representations convert all data to strings.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For a loss-less representation, Zorba implements that proposed by\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://john.snelson.org.uk/parsing-json-into-xquery\">John Snelson</a>.\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   {\n     \"firstName\" : \"John\",\n     \"lastName\" : \"Smith\",\n     \"address\" : {\n       \"streetAddress\" : \"21 2nd Street\",\n       \"city\" : \"New York\",\n       \"state\" : \"NY\",\n       \"postalCode\" : 10021\n     },\n     \"phoneNumbers\" : [ \"212 732-1234\", \"646 123-4567\" ]\n   }\n </pre>\n would be represented as:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   &lt;json type=\"object\"&gt;\n     &lt;pair name=\"firstName\" type=\"string\"&gt;John&lt;/pair&gt;\n     &lt;pair name=\"lastName\" type=\"string\"&gt;Smith&lt;/pair&gt;\n     &lt;pair name=\"address\" type=\"object\"&gt;\n       &lt;pair name=\"streetAddress\" type=\"string\"&gt;21 2nd Street&lt;/pair&gt;\n       &lt;pair name=\"city\" type=\"string\"&gt;New York&lt;/pair&gt;\n       &lt;pair name=\"state\" type=\"string\"&gt;NY&lt;/pair&gt;\n       &lt;pair name=\"postalCode\" type=\"number\"&gt;10021&lt;/pair&gt;\n     &lt;/pair&gt;\n     &lt;pair name=\"phoneNumbers\" type=\"array\"&gt;\n       &lt;item type=\"string\"&gt;212 732-1234&lt;/item&gt;\n       &lt;item type=\"string\"&gt;646 123-4567&lt;/item&gt;\n     &lt;/pair&gt;\n   &lt;/json&gt;\n </pre>\n For a lossy representation, Zorba implements\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://jsonml.org/\">JsonML</a> (the array form).\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   [ \"person\",\n     { \"created\" : \"2006-11-11T19:23\",\n       \"modified\" : \"2006-12-31T23:59\" },\n     [ \"firstName\", \"Robert\" ],\n     [ \"lastName\", \"Smith\" ],\n     [ \"address\",\n       { \"type\" : \"home\" },\n       [ \"street\", \"12345 Sixth Ave\" ],\n       [ \"city\", \"Anytown\" ],\n       [ \"state\", \"CA\" ],\n       [ \"postalCode\", \"98765-4321\" ]\n     ]\n   ]\n </pre>\n would be represented as:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   &lt;person created=\"2006-11-11T19:23\" modified=\"2006-12-31T23:59\"&gt;\n     &lt;firstName&gt;Robert&lt;/firstName&gt;\n     &lt;lastName&gt;Smith&lt;/lastName&gt;\n     &lt;address type=\"home\"&gt;\n       &lt;street&gt;12345 Sixth Ave&lt;/street&gt;\n       &lt;city&gt;Anytown&lt;/city&gt;\n       &lt;state&gt;CA&lt;/state&gt;\n       &lt;postalCode&gt;98765-4321&lt;/postalCode&gt;\n     &lt;/address&gt;\n   &lt;/person&gt;\n </pre>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/cryptography/hash" : { "doc" : " This module provides functions that perform different hash operations.\n For example, they compute MD5 and various SHA functions on either\n strings or binary. The result is the base64 encoded value of the hash.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/cryptography/hmac" : { "doc" : " This module provides functions that perform HMAC\n (hash-based message authentication code) operations.\n For example, they calculate message codes involving hash functions such\n as MD5 and various SHA variants. The result is the base64 encoded value\n of the hash. A hash may be used to verify the data integrity and\n the authenticity of a message.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/character-based-string-similarity" : { "doc" : " This library module provides character-based string similarity functions\n that view strings as sequences of characters, generally computing a similarity score\n that corresponds to the cost of transforming one string into another.\n These functions are particularly useful for matching near duplicate strings\n in the presence of typographical errors.\n The logic contained in this module is not specific to any particular XQuery implementation.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/consolidation" : { "doc" : " This library module provides data consolidation functions that generally take as input a sequence of XML nodes\n and apply some rule in order do decide which node is better suited to represent the entire sequence.\n The logic contained in this module is not specific to any particular XQuery implementation,\n although the consolidation functions based on matching sequences against XPath expressions require\n some form of dynamic evaluation for XPath expressions,\n such as the x:eval() function provided in the Qizx XQuery Engine.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/conversion" : { "doc" : " This library module provides data conversion functions for processing calendar dates,\n temporal values, currency values, units of measurement, location names and postal addresses.\n The logic contained in this module is not specific to any particular XQuery implementation.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/hybrid-string-similarity" : { "doc" : " This library module provides hybrid string similarity functions, combining the properties of\n character-based string similarity functions and token-based string similarity functions.\n The logic contained in this module is not specific to any particular XQuery implementation,\n although the module requires the trigonometic functions of XQuery 3.0 or a math extension\n function such as sqrt($x as numeric) for computing the square root.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/normalization" : { "doc" : " This library module provides data normalization functions for processing calendar dates,\n temporal values, currency values, units of measurement, location names and postal addresses.\n These functions are particularly useful for converting different data representations into cannonical formats.\n The logic contained in this module is not specific to any particular XQuery implementation.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/phonetic-string-similarity" : { "doc" : " This library module provides phonetic string similarity functions, comparing strings with basis on how they sound.\n These metrics are particularly effective in matching names, since names are often spelled in different\n ways that sound the same.\n The logic contained in this module is not specific to any particular XQuery implementation.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/set-similarity" : { "doc" : " This library module provides similarity functions for comparing sets of XML\n nodes (e.g., sets of XML elements, attributes or atomic values).\n These functions are particularly useful for matching near duplicate sets of XML nodes.\n The logic contained in this module is not specific to any particular XQuery implementation.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/data-cleaning/token-based-string-similarity" : { "doc" : " This library module provides token-based string similarity functions that view strings\n as sets or multi-sets of tokens and use set-related properties to compute similarity scores.\n The tokens correspond to groups of characters extracted from the strings being compared, such as\n individual words or character n-grams.\n These functions are particularly useful for matching near duplicate strings in cases where\n typographical conventions often lead to rearrangement of words (e.g., \"John Smith\" versus \"Smith, John\").\n The logic contained in this module is not specific to any particular XQuery implementation,\n although the module requires the trigonometic functions of XQuery 3.0 or a math extension\n function such as sqrt($x as numeric) for computing the square root.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/datetime" : { "doc" : " This module provides functions to retrieve the current dateTime.\n In contrast to the current-dateTime functions specified in\n \"XQuery Functions and Operators\" the functions in this module are nondeterministic.\n That is, they do not return the current-dateTime from the dynamic context but return the actual value.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/debugger/dbgp-message-handler" : { "doc" : " Zorba debugger module.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/email/imap" : { "doc" : " This module provides functions for accessing and manipulating emails on mail\n servers through the IMAP protocol.\n All functions in this module receive as the first argument the IMAP host and user\n information. This is an element with the type <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostInfoType</code> as defined\n in the email schema: <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>.\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n &lt;email:hostInfo&gt;\n   &lt;email:hostName&gt;imap.example.com&lt;/email:hostName&gt;\n   &lt;email:userName&gt;myuser&lt;/email:userName&gt;\n   &lt;email:password&gt;mypassword&lt;/email:password&gt;\n &lt;/email:hostInfo&gt;\n </pre>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostInfoType</code> only needs to be in the email schema namespace\n (<code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://www.zorba-xquery.com/modules/email</code>). It does not need\n to be validated since it's validated by the module.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/email/smtp" : { "doc" : " This module can be used for sending emails.\n The SMTP module contains only one public function that receives two parameters.\n The SMTP server access information passed as an <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">hostInfo</code> element\n and the email message representation as a <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">message</code> element.\n For a quick start see the examples associates with the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">send(...)</code>\n function. For a complete specification read, the description and the\n documentation associated with this function.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/datetime" : { "doc" : " This is a library module offering the same set of functions\n defined by Microsoft Excel.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/engineering" : { "doc" : "  This is a library module offering the same set of functions\n defined by Microsoft Excel, under Engineering Functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/information" : { "doc" : " This is a library module offering the same set of functions\n defined by Microsoft Excel, under Information Functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/logical" : { "doc" : " This is a library module offering the same set of functions\n defined by Microsoft Excel, under Logical Functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/lookup" : { "doc" : " This module implements some Excel 2003 lookup functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/math-sumproduct" : { "doc" : " Module implementing the sumproduct functions from Excel 2003 math library.\n There are 30 functions defined, implementing the same function\n but with 1 to 30 parameters.\n Each parameter can be a sequence of infinite length.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/math" : { "doc" : " This is a library module offering a part of the set of functions\n defined by Microsoft Excel 2003.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/statistical-zorba" : { "doc" : " This module implements some Excel 2003 statistical functions\n that cannot be implemented with standard XQuery functions.\n It uses Zorba specific functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/statistical" : { "doc" : " This is a library module offering a part of the set of statistical functions\n defined by Microsoft Excel 2003.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/excel/text" : { "doc" : " This is a library module offering the same set of functions\n defined by Microsoft Excel, under Text and Data Functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/fetch" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions to fetch the content of a resource identified\n by a URI. For example, it fetches the content of file or http resources.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to retrieve such content, the functions use the\n URI resolution and URL resolver process as documented at\n <a href=\"../../html/uriresolvers.html\">\n URI Resolvers</a>.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/full-text" : { "doc" : " This module provides an XQuery API to full-text functions.\n For general information about Zorba's implementation of the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-full-text-10/\">XQuery and XPath Full Text 1.0 specification</a>\n as well as instructions for building an installing a thesaurus,\n see the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.zorba-xquery.com/html/documentation/latest/zorba/ft_thesaurus\">Full Text Thesaurus documentation</a>.\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on languages</h2>\n To refer to paricular human languages,\n Zorba uses both the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/ISO_639-1\">ISO 639-1</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/ISO_639-2\">ISO 639-2</a>\n languages codes.\n Note that Zorba supports only a subset of the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">complete list of language codes</a>\n and not every function supports the same subset.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Most functions in this module take a language as a parameter\n using the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xmlschema-2/#language\"><code>xs:language</code></a>\n XML schema data type.\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on stemming</h2>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">stem()</code> functions return the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://en.wikipedia.org/wiki/Word_stem\">stem</a>\n of a word.\n In Zorba,\n the stem of a word itself, however, is not guaranteed to be a word.\n It is best to consider a stem as an opaque byte sequence.\n All that is guaranteed about a stem is that,\n for a given word,\n the stem of that word will always be the same byte sequence.\n Hence,\n you sould never compare the result of one of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">stem()</code>\n functions against a non-stemmed string,\n for example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  if ( ft:stem( \"apples\" ) eq \"apple\" )             ** WRONG **\n </pre>\n Instead do:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  if ( ft:stem( \"apples\" ) eq ft:stem( \"apple\" ) )  ** CORRECT **\n </pre>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on the thesaurus</h2>\n The <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">thesaurus-lookup()</code> functions have \"levels\"\n and \"relationship\" parameters.\n The values for these are implementation-defined.\n Zorba's default implementation uses the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://wordnet.princeton.edu/\">WordNet lexical database</a>,\n version 3.0.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n In WordNet,\n the number of \"levels\" that two phrases are apart\n are how many hierarchical meanings apart they are.\n For example,\n \"canary\" is 5 levels away from \"vertebrate\"\n (carary &gt; finch &gt; oscine &gt; passerine &gt; bird &gt; vertebrate).\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n When using the WordNet implementation,\n Zorba supports all of the relationships (and their abbreviations)\n specified by\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=7776\">ISO 2788</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.niso.org/kst/reports/standards?step=2&amp;gid=&amp;project_key=7cc9b583cb5a62e8c15d3099e0bb46bbae9cf38a\">ANSI/NISO Z39.19-2005</a>\n with the exceptions of \"HN\" (history note)\n and \"X SN\" (see scope note for).\n These relationships are:\n  <table xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    <tr>\n      <th>Rel.</th>\n      <th>Meaning</th>\n      <th>WordNet Rel.</th>\n    </tr>\n    <tr>\n      <td>BT</td>\n      <td>broader term</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>BTG</td>\n      <td>broader term generic</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>BTI</td>\n      <td>broader term instance</td>\n      <td>instance hypernym</td>\n    </tr>\n    <tr>\n      <td>BTP</td>\n      <td>broader term partitive</td>\n      <td>part meronym</td>\n    </tr>\n    <tr>\n      <td>NT</td>\n      <td>narrower term</td>\n      <td>hyponym</td>\n    </tr>\n    <tr>\n      <td>NTG</td>\n      <td>narrower term generic</td>\n      <td>hyponym</td>\n    </tr>\n    <tr>\n      <td>NTI</td>\n      <td>narrower term instance</td>\n      <td>instance hyponym</td>\n    </tr>\n    <tr>\n      <td>NTP</td>\n      <td>narrower term partitive</td>\n      <td>part holonym</td>\n    </tr>\n    <tr>\n      <td>RT</td>\n      <td>related term</td>\n      <td>also see</td>\n    </tr>\n    <tr>\n      <td>SN</td>\n      <td>scope note</td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>TT</td>\n      <td>top term</td>\n      <td>hypernym</td>\n    </tr>\n    <tr>\n      <td>UF</td>\n      <td>non-preferred term</td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>USE</td>\n      <td>preferred term</td>\n      <td>n/a</td>\n    </tr>\n  </table>\n Note that you can specify relationships\n either by their abbreviation\n or their meaning.\n Relationships are case-insensitive.\n In addition to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=7776\">ISO 2788</a>\n and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.niso.org/kst/reports/standards?step=2&amp;gid=&amp;project_key=7cc9b583cb5a62e8c15d3099e0bb46bbae9cf38a\">ANSI/NISO Z39.19-2005</a>\n relationships,\n Zorba also supports all of the relationships offered by WordNet.\n These relationships are:\n  <table xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ft_rels\">\n    <tr>\n      <th>Relationship</th>\n      <th>Meaning</th>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">also see</td>\n      <td>\n        A word that is related to another,\n        e.g., for \"varnished\" (furniture)\n        one should <em>also see</em> \"finished.\"\n      </td>\n    </tr>\n    <tr>\n      <td>antonym</td>\n      <td>\n        A word opposite in meaning to another,\n        e.g., \"light\" is an <em>antonym</em> for \"heavy.\"\n      </td>\n    </tr>\n    <tr>\n      <td>attribute</td>\n      <td>\n        A noun for which adjectives express values,\n        e.g., \"weight\" is an <em>attribute</em>\n        for which the adjectives \"light\" and \"heavy\"\n        express values.\n      </td>\n    </tr>\n    <tr>\n      <td>cause</td>\n      <td>\n        A verb that causes another,\n        e.g., \"show\" is a <em>cause</em> of \"see.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">derivationally related form</td>\n      <td>\n        A word that is derived from a root word,\n        e.g., \"metric\" is a <em>derivationally related form</em> of \"meter.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">derived from adjective</td>\n      <td>\n        An adverb that is derived from an adjective,\n        e.g., \"correctly\" is <em>derived from the adjective</em> \"correct.\"\n      </td>\n    </tr>\n    <tr>\n      <td>entailment</td>\n      <td>\n        A verb that presupposes another,\n        e.g., \"snoring\" <em>entails</em> \"sleeping.\"\n      </td>\n    </tr>\n    <tr>\n      <td>hypernym</td>\n      <td>\n        A word with a broad meaning that more specific words fall under,\n        e.g., \"meal\" is a <em>hypernym</em> of \"breakfast.\"\n      </td>\n    </tr>\n    <tr>\n      <td>hyponym</td>\n      <td>\n        A word of more specific meaning than a general term applicable to it,\n        e.g., \"breakfast\" is a <em>hyponym</em> of \"meal.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">instance hypernym</td>\n      <td>\n        A word that denotes a category of some specific instance,\n        e.g., \"author\" is an <em>instance hypernym</em> of \"Asimov.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">instance hyponym</td>\n      <td>\n        A term that donotes a specific instance of some general category,\n        e.g., \"Asimov\" is an <em>instance hyponym</em> of \"author.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">member holonym</td>\n      <td>\n        A word that denotes a collection of individuals,\n        e.g., \"faculty\" is a <em>member holonym</em> of \"professor.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">member meronym</td>\n      <td>\n        A word that denotes a member of a larger group,\n        e.g., a \"person\" is a <em>member meronym</em> of a \"crowd.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">part holonym</td>\n      <td>\n        A word that denotes a larger whole comprised of some part,\n        e.g., \"car\" is a <em>part holonym</em> of \"engine.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">part meronym</td>\n      <td>\n        A word that denotes a part of a larger whole,\n        e.g., an \"engine\" is <em>part meronym</em> of a \"car.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">participle of verb</td>\n      <td>\n        An adjective that is the participle of some verb,\n        e.g., \"breaking\" is the <em>participle of the verb</em> \"break.\"\n      </td>\n    </tr>\n    <tr>\n      <td>pertainym</td>\n      <td>\n        An adjective that classifies its noun,\n        e.g., \"musical\" is a <em>pertainym</em> in \"musical instrument.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">similar to</td>\n      <td>\n        Similar, though not necessarily interchangeable, adjectives.\n        For example, \"shiny\" is <em>similar to</em> \"bright\",\n        but they have subtle differences.\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">substance holonym</td>\n      <td>\n        A word that denotes a larger whole containing some constituent\n        substance, e.g., \"bread\" is a <em>substance holonym</em> of \"flour.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">substance meronym</td>\n      <td>\n        A word that denotes a constituant substance of some larger whole,\n        e.g., \"flour\" is a <em>substance meronym</em> of \"bread.\"\n      </td>\n    </tr>\n    <tr>\n      <td nowrap=\"nowrap\">verb group</td>\n      <td>\n        A verb that is a member of a group of similar verbs,\n        e.g., \"live\" is in the <em>verb group</em>\n        of \"dwell\", \"live\", \"inhabit\", etc.\n      </td>\n    </tr>\n  </table>\n <h2 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Notes on tokenization</h2>\n For general information about Zorba's implementation of tokenization,\n including what constitutes a token,\n see the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.zorba-xquery.com/html/documentation/latest/zorba/ft_tokenizer\">Full Text Tokenizer</a> documentation.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/http-client" : { "doc" : " <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Introduction</h1>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides provides simple functions for performing HTTP requests\n (GET, POST, DELETE etc.), as well as a more flexible general\n purpose function (<a href=\"#send-request-3\">send-request()</a>).\n </p>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Examples of how to use this module</h1>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request</h4>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush:xquery;\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n declare namespace svg=\"http://www.w3.org/2000/svg\";\n http:get(\"http://www.w3.org/Graphics/SVG/svglogo.svg\")[2]/svg:svg/svg:title\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example downloads an XML resource from the web (in this case,\n an SVG file, which is an XML-based image format) and returns it as\n a document node. Since the XML is in a namespace, we declare that\n namespace; we can then perform a path expression directly on the\n return value of http:get().\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request (retrieving XHTML)</h4>\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n   import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n   declare namespace xhtml=\"http://www.w3.org/1999/xhtml\";\n   http:get-node( \"http://www.w3.org\" )[2]//xhtml:body\n   </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example shows how to retrieve an XHTML resource. XHTML is\n XML, so the http:get-node() function will return it as a document node\n and you can operate on it with the full power of XQuery. As above, since this\n XML is in a particular namespace, the above query defines that namespace\n with the prefix \"xhtml\" so it can easily perform path expressions, etc.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Note: many webservers, include www.w3.org, return XHTML with the\n HTTP Content-Type \"text/html\". Zorba cannot assume that \"text/html\"\n is actually XHTML, and so http:get() would have returned raw text\n rather than a document node. That is why the example above uses\n http:get-node(), which overrides the server's Content-Type and tells\n Zorba to attempt to parse the result as XML.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request (retrieving HTML as text)</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Note that XQuery does <b>not</b> understand plain HTML, and so if the URL\n you retrieve contains plain HTML data (not XHTML), it will be treated as\n plain text as shown in the next example. If you want to operate on the HTML\n with XQuery, you should use the HTML language module which can transform\n HTML to XHTML. The HTML module is supported by the Zorba team, but it is\n not a \"core module\", meaning that it is not shipped with every Zorba\n installation and may not be available. See\n <a href=\"http://www.zorba-xquery.com/site2/html/downloads.html\">the Zorba downloads\n page</a> for information about obtaining this module if you do not\n have it.</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n http:get(\"http://www.example.com\")[2]\n </pre>\n returns\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xml;\">\n   &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n   &lt;html&gt;\n     &lt;head&gt;\n       &lt;meta http-equiv=\"Content-Type\"\n       content=\"text/html; charset=utf-8\" /&gt;\n       &lt;title&gt;Example Web Page&lt;/title&gt;\n     &lt;/head&gt;\n     &lt;body&gt;\n       &lt;p&gt;You have reached this web page by typing \"example.com\",\n       \"example.net\", or \"example.org\" into your web browser.&lt;/p&gt;\n       &lt;p&gt;These domain names are reserved for use in documentation and are\n       Not available for registration. See\n       &lt;a href=\"http://www.rfc-editor.org/rfc/rfc2606.txt\"&gt;RFC 2606&lt;/a&gt;,\n       Section 3.&lt;/p&gt;\n     &lt;/body&gt;\n   &lt;/html&gt;\n   </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the response data above is a simple\n xs:string value containing the HTML data, not actual XML data. If you\n executed the above query using the Zorba command-line client, you would\n have actually seen data like the following:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xml;\">\n   &amp;lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&amp;gt;\n   &amp;lt;html&amp;gt;\n      ...\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">because Zorba would attempt to serialize it as XML data, and would\n escape all the raw angle brackets in the original xs:string.</p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple POST Request</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Here is a simple example which sends text content by making an HTTP POST\n request.\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n http:post( \"...\", \"Hello World\" )\n </pre>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"standard_return\">Return Values</h1>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Most functions in this module (all except\n <a href=\"#options-1\">options()</a>) return one or more items.\n (<a href=\"#head-1\">head()</a> returns exactly one.) For all of these,\n the first item returned will be a &lt;http-schema:response&gt;\n element, as seen in the examples above. This element has \"status\" and\n \"message\" attributes, representing the result of the HTTP call. It\n also has any number of &lt;http-schema:header&gt; child elements that\n encode the HTTP headers returned by the HTTP server. Finally, it\n will generally contain a &lt;http-schema:body&gt; child element with\n a \"media-type\" attribute that identifies the content-type of the\n result data.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The full schema of this &lt;http-schema:response&gt; element is\n part of the <a href=\"http://expath.org/modules/http-client/\">EXPath\n HTTP Client module</a>. You can see the schema\n <a href=\"schemas/expath.org_ns_http-client.html\">here</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Any items in function return values after the initial\n &lt;http-schema:response&gt; element are the body/bodies of the HTTP\n response from the server. (MIME Multi-part responses will have\n more than one body.) The type of these items depends on the\n Content-Type for each body. Each item will be:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>\n    an element node, if the returned content type is one of:\n    <ul>\n      <li>text/xml</li>\n      <li>application/xml</li>\n      <li>text/xml-external-parsed-entity</li>\n      <li>application/xml-external-parsed-entity</li>\n      <li>or if the Content-Type ends with \"+xml\".</li>\n    </ul>\n  </li>\n  <li>\n    an xs:string, if the content type starts with \"text/\" and does not match the\n    above XML content types strings.\n  </li>\n  <li>xs:base64Binary for all other content types.</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This return value - a sequence of items comprising one\n &lt;http-schema:response&gt; element followed by zero or more\n response items - is referred to as the \"standard http-client\n return type\" in the function declarations below.</p>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"url_string\">$href Arguments to Functions</h1>\n All functions in this module accept a URL argument named $href. In\n all cases, the value passed to $href must be a valid xs:anyURI.\n However, all functions declare $href to be of type xs:string. This\n is for convenience, since you can pass a string literal value (that\n is, a URL in double-quotes spelled out explicitly in your query)\n to an xs:string parameter.\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"get_warning\">Important Notice Regarding get() Functions</h1>\n All of the get() functions in this module -\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#get-1\">get()</a>, <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#get-node-1\">get-node()</a>,\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#get-text-1\">get-text()</a>, and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#get-binary()\">get-binary()</a> - are declared to be\n <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">nondeterministic</i>, which means that Zorba will not cache\n their results. However, they are <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">not</b> declared to be\n <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sequential</i>, which means that Zorba may re-order them\n as part of its query optimization. According to the HTTP RFC,\n GET requests should only return data, and should not have any\n side-effects. However, in practice it is not uncommon for GET\n requests to have side-effects. If your application depends on\n the ordering of side-effects from making GET requests, you should\n either use the more complex <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#send-request-3\">send-request()</a>\n function (which <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">is</b> declared <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sequential</i>), or alterately\n wrap each call to get() in your own sequential function, to ensure\n that Zorba does not place the GET requests out of order.\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"expath_relation\">Relation to the EXPath http-client module</h1>\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/\">EXPath</a> defines its own http-client\n module, which is available separately for Zorba as a non-core module.\n There are two primary differences between EXPath's http-client and\n Zorba's core http-client (this module):\n <ol xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>EXPath defines only the send-request() function, although it\n does include convenient 1- and 2-argument forms in addition to the\n full 3-argument form. EXPath does not include the simpler get(),\n post(), put(), delete(), head(), and options() functions defined by\n this module.</li>\n   <li>EXPath specifies that all HTML content returned from the\n HTTP server will be <i>tidied up</i> into valid XML, and then parsed\n into an element. As this required an additional third-party library\n dependency, Zorba's http-client module does not perform this tidying.\n Instead, HTML content is returned as a string (with special XML\n characters replaced with XML entity references, as shown in the\n above examples).</li>\n </ol>\n See <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.expath.org/spec/http-client\">the full spec\n of the EXPath http-client module</a> for more information.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/image/animation" : { "doc" : " This module provides functions to create animated GIF images.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/image/basic" : { "doc" : " This module provides function to do the following basic image operations:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>create empty images</li>\n   <li>compare images</li>\n   <li>compress image</li>\n   <li>convert an image one format to another</li>\n   <li>retrieve with, height, format, and exif information from an image</li>\n </ul>\n The following image formats are supported:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>GIF</li>\n   <li>JPEG</li>\n   <li>PNG</li>\n   <li>TIFF</li>\n   <li>BMP</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://www.zorba-xquery.com/modules/image/error</tt> (associated with prefix ierr).</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/image/graphviz" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Module that provides functions for generating SVG graphs.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The module provides two function for generating graphs given in the :\n <ul><li>DOT language (see <a href=\"http://www.graphviz.org/\">\n http://www.graphviz.org</a>)</li><li>or in the XML-based Graph eXchange\n Language (see <a href=\"http://www.gupro.de/GXL/\">http://www.gupro.de/GXL/</a>),\n respectively.</li></ul>\n Both functions use the Graphviz Visualization Library in order to\n layout and render the graphs. As a result, both return a sequence\n of (document)-nodes (one for each input graph).\n These nodes are instances of the Scalable Vector Graphics (SVG) format.\n SVG is a language for describing two-dimensional graphics and\n graphical applications in XML. More information about SVG can\n be found at <a href=\"http://www.w3.org/Graphics/SVG/\">http://www.w3.org/Graphics/SVG/</a>.\n As second parameters, both functions take a sequence of strings that\n are parameters for the graph generation and rendering algorithms.\n Currently, only the empty-sequence is allowed here.\n These parameters exist for future use.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please note that this feature is only available on Unix-based\n platforms (i.e. not on Windows).</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/image/manipulation" : { "doc" : " This module provides functions to handle image manipulations like resizing, zooming,\n special effects etc.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://www.zorba-xquery.com/modules/image/error</tt> (associated with prefix ierr).</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/image/paint" : { "doc" : " This module provides a function to extend an image with additional shapes.\n Fully supported image formats are:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>GIF</li>\n   <li>JPEG</li>\n   <li>PNG</li>\n   <li>TIFF</li>\n   <li>BMP</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://www.zorba-xquery.com/modules/image/error</tt> (associated with prefix ierr).</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/introspection/sctx" : { "doc" : " Introspection Module for the Static Context components.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/languages/xslt" : { "doc" : " This module provides XSLT 1.0 transformation functionality.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For details on XSLT see\n <a href=\"http://www.w3.org/TR/xslt\">XSLT 1.0 specification</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module implements the invoking of an XSLT transformation from XQuery\n described in <a href=\"http://lists.w3.org/Archives/Member/w3c-xsl-wg/2008Apr/0052.html\">\n    Michael Kay's proposal</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:\n <pre class=\"brush: xquery;\">\n import module namespace\n        xslt = \"http://www.zorba-xquery.com/modules/languages/xslt\";\n let $source :=\n     &lt;catalog&gt;\n         &lt;cd&gt;\n                 &lt;title&gt;Empire Burlesque&lt;/title&gt;\n                 &lt;artist&gt;Bob Dylan&lt;/artist&gt;\n                 &lt;country&gt;USA&lt;/country&gt;\n                 &lt;company&gt;Columbia&lt;/company&gt;\n                 &lt;price&gt;10.90&lt;/price&gt;\n                 &lt;year&gt;1985&lt;/year&gt;\n         &lt;/cd&gt;\n         &lt;cd&gt;\n                 &lt;title&gt;Hide your heart&lt;/title&gt;\n                 &lt;artist&gt;Bonnie Tyler&lt;/artist&gt;\n                 &lt;country&gt;UK&lt;/country&gt;\n                 &lt;company&gt;CBS Records&lt;/company&gt;\n                 &lt;price&gt;9.90&lt;/price&gt;\n                 &lt;year&gt;1988&lt;/year&gt;\n         &lt;/cd&gt;\n     &lt;/catalog&gt;\n let $stylesheet :=\n   &lt;xsl:stylesheet version=\"1.0\"\n       xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n     &lt;xsl:template match=\"/\"&gt;\n       &lt;html&gt;\n       &lt;body&gt;\n       &lt;h2&gt;Music Collection&lt;/h2&gt;\n         &lt;table border=\"1\"&gt;\n           &lt;tr bgcolor=\"lightblue\"&gt;\n             &lt;th&gt;Title&lt;/th&gt;\n             &lt;th&gt;Artist&lt;/th&gt;\n           &lt;/tr&gt;\n           &lt;xsl:for-each select=\"catalog/cd\"&gt;\n           &lt;tr&gt;\n             &lt;td&gt;&lt;xsl:value-of select=\"title\"/&gt;&lt;/td&gt;\n             &lt;td&gt;&lt;xsl:value-of select=\"artist\"/&gt;&lt;/td&gt;\n           &lt;/tr&gt;\n           &lt;/xsl:for-each&gt;\n         &lt;/table&gt;\n       &lt;/body&gt;\n       &lt;/html&gt;\n     &lt;/xsl:template&gt;\n   &lt;/xsl:stylesheet&gt;\n return\n   xslt:transform( $source, $stylesheet)\n </pre></p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/math" : { "doc" : " Extensive math library.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/node-position" : { "doc" : " This module provides a function (np:node-position) that, given a node,\n returns positional information about the node in the form of an xs:anyURI\n item. The module also defines functions that use such positional information\n to determine: (1) positional relationships between two nodes (e.g. if one\n is the ancestor of another) and (2) positional properties of a single node\n (e.g. its level in the tree).\n Within this module, the term \"node position\" will be used to refer to an\n xs:anyURI item that is returned by the np:node-position function.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/node-reference" : { "doc" : " The module provides functions to compute an immutable and opaque reference\n for any node and to retrieve nodes given their identifier. The identifiers\n are immutable, i.e. a node identifier does not change during the node lifetime\n and cannot be reused for another node after the original node gets deleted.\n Identifiers are unique, in that, two different nodes will never have the same\n identifier. A node, at any time during its lifetime, can be retrieved by its\n identifier.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please see the <a href=\"../../html/data_lifecycle.html\">data lifecycle\n documentation</a> about details on storing nodes in collections or as documents.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/node" : { "doc" : " This module defines a set of function which can be used\n to determine (1) the relationship between two nodes (e.g. if one\n is the ancestor if another) and (2) properties of given\n nodes (e.g. their level in the tree).\n The same functionality can be achieved with simple XPath expressions.\n However, please note that using the functions in this modules instead\n of path expressions guarantees better performance.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/oauth/client" : { "doc" : " This module provides the functions necessary to acquire access to the personal\n resources of a user through the open standard called\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://oauth.net/\" target=\"_blank\">OAuth</a>.\n The application/mashup creator does not need to know the\n specifics of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://oauth.net/\" target=\"_blank\">OAuth</a> to use this module.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/oauth/error" : { "doc" : " Module that defines the errors raised in Oauth modules.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/process" : { "doc" : " This module provides functions to create a native process and return the result\n (i.e. exit code, result on standard out and error).\n Example:\n<pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n  import module namespace proc = \"http://www.zorba-xquery.com/modules/process\";\n  proc:exec(\"ls\")\n</pre>\n Potential result:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n &lt;result xmlns=\"http://www.zorba-xquery.com/modules/process\"&gt;\n   &lt;stdout&gt;myfile.txt&lt;/stout&gt;\n   &lt;stderr/&gt;\n   &lt;exit-code&gt;0&lt;/exit-code&gt;\n &lt;/result&gt;\n </pre>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/project_xqdoc" : { "doc" : " Function library provides functions for generating the XQDoc XML's for a project.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/random" : { "doc" : " This module provides several functions for generating (pseudo-)random\n numbers and strings.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/reflection" : { "doc" : " This module provides functions to dynamically invoke functions or main modules,\n respectively. Each of the functions (invoke or eval) come in four variants depending\n whether the expression being invoked is simple, nondeterministic, updating,\n or sequential.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/schema-tools" : { "doc" : " This module provides funtionality to get sample XMLSchema from XML instances\n and sample XML instances from XMLSchema.\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">Apache XMLBeans</a> library is used to implement\n inst2xsd and xsd2inst functions.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note:</b> Since this module has a Java library dependency a JVM required\n to be installed on the system. For Windows: jvm.dll is required on the system\n path ( usually located in \"C:\\Program Files\\Java\\jre6\\bin\\client\".\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/schema" : { "doc" : " This module provides function that are related to XML Schema support\n in Zorba.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/data-structures/unordered-map" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module defines a set of functions for working with maps. A map\n is identified by a QName and can be created using the map:create or\n map:create-transient functions and deleted using the map:delete function,\n respectively.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The lifetime of a transient map is limited by the execution of the\n current XQuery program. A non-transient (or persistent) map lives until\n it is explicitly deleted. Accordingly, it's also available\n to other XQuery programs.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The key of a particular entry in the map can consist of a tuple of\n atomic values (called attributes). The actual type of each attribute\n is determined when the map is created. The value of each attribute can\n be an arbitrary sequence of items.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/dynamic/collections/ddl" : { "doc" : " This modules defines a set of functions for managing persistent, ordered, and\n updatable collections.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please refer to our documentation for <a href=\"../../html/data_lifecycle.html\">\n more information</a> about the lifecycle management and the manipulation of such\n collections.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/dynamic/collections/dml" : { "doc" : " This modules provides a set of functions to modify a collection and retrieve the items\n contained in a particular collection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please refer to our documentation for <a href=\"../../html/data_lifecycle.html\">\n more information</a> about the lifecycle management and the manipulation of such\n collections.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/dynamic/collections/w3c/ddl" : { "doc" : " This modules defines a set of functions for managing persistent, ordered, and\n updatable collections.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Such collections are identified by a URI as defined in the XQuery specification.\n However, please note that we do not advice users to use collections identified by URIs.\n Instead, we refer to the <a href=\"../../html/data_lifecycle.html\">data lifecycle\n documentation</a>. It gives an overview over serveral ways to work with collections,\n documents, and other data-structures.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/dynamic/collections/w3c/dml" : { "doc" : " This modules provides a set of functions to modify a collection and retrieve the nodes\n contained in a particular collection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Such collections are identified by a URI as defined in the XQuery specification.\n However, please note that we do not advice users to use collections identified by URIs.\n Instead, we refer to the <a href=\"../../html/data_lifecycle.html\">data lifecycle\n documentation</a>. It gives an overview over serveral ways to work with collections,\n documents, and other data-structures.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/dynamic/documents" : { "doc" : " This module defines a set of functions which manage documents that\n are persisted in the store. Specifically, it contains functions\n to put, remove, list, or retrieve documents.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Please refer to <a href=\"../../html/data_lifecycle.html\">our documentation</a> for\n more information about the lifecycle management and manipulation of documents.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/static/collections/ddl" : { "doc" : " This modules defines a set of functions for managing collections which are\n declared in the prolog of a module.\n For example, it provides functions to create, delete, or introspect collections.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is part of <a href=\"../../html/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the collections managed by this module\n have to be pre-declared in the prolog of a module. Please refer to the\n <a href=\"../../html/data_lifecycle.html\">general documentation</a>\n for more information and examples.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/static/collections/dml" : { "doc" : " This modules provides a set of functions to modify a collection and retrieve the items\n contained in a particular collection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is part of <a href=\"../../html/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the collections managed by this module\n have to be pre-declared in the prolog of a module. Please refer to the\n <a href=\"../../html/data_lifecycle.html\">general documentation</a>\n for more information and examples.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/static/indexes/ddl" : { "doc" : " This modules defines a set of functions for managing indexes which are\n declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is part of <a href=\"../../html/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the indexes managed by this module\n have to be pre-declared in the prolog of a module. Please refer to the\n <a href=\"../../html/data_lifecycle.html\">general documentation</a>\n for more information and examples.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/static/indexes/dml" : { "doc" : " This module defines a set of functions to probe and refresh indexes which are\n declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is part of <a href=\"../../html/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the indexes managed by this module\n have to be pre-declared in the prolog of a library module. Please refer to the\n <a href=\"../../html/data_lifecycle.html\">general documentation</a>\n for more information and examples.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/static/integrity_constraints/ddl" : { "doc" : " This module defines a set of functions to manage integrity constraints\n which are declared in the prolog of a module.\n For example, it provides functions to activate or deactivate integrity constraints.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is part of <a href=\"../../html/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the integrity constraints managed by this module\n have to be pre-declared in the prolog of a module. Please refer to the\n <a href=\"../../html/data_lifecycle.html\">general documentation</a>\n for more information and examples.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/store/static/integrity_constraints/dml" : { "doc" : " This module defines a function to check if an integrity constraint is satisfied.\n The integrity constraint needs to be declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module is part of <a href=\"../../html/xqddf.html\">Zorba's XQuery Data\n Definition Facility</a>. All the integrity constraints managed by this module\n have to be pre-declared in the prolog of a module. Please refer to the\n <a href=\"../../html/data_lifecycle.html\">general documentation</a>\n for more information and examples.</p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/string" : { "doc" : " This module provides string related functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/system" : { "doc" : " The system module allows developers to access system properties.\n Part of these system properties are environment variables,\n local variable to the process running Zorba, and properties defined by Zorba.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n To avoid conflicts between environment variables and properties defined by Zorba,\n all environment variables are prefixed with <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">env.</i>.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For instance, the following query: <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n import module namespace system = \"http://www.zorba-xquery.com/modules/system\";\n for $prop in system:properties()\n return concat($prop, \": \", system:property($prop), \"\n \")\n </pre>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Will output:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n env.TERM_PROGRAM: Apple_Terminal\n ...\n </pre>\n In this example, it is important to notice that the environnement variable PATH\n with the key env.PATH.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/uri" : { "doc" : " This module provides string related functions.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/util-jvm" : { "doc" : " This module provides common functionality for modules that use java\n implementations.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Modules using java implementations must import this module\n to specify the dependency.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note:</b> Since this module has a Java library dependency a JVM is required\n to be installed on the system. For Windows: jvm.dll is required on the system\n path (usually located in \"C:\\Program Files\\Java\\jre\\bin\\client\").\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/xml" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides functions for reading XML files from string inputs.\n It allows reading of well-formed XML documents as well as well-formed\n external parsed entities, described by\n <a href=\"http://www.w3.org/TR/xml/#wf-entities\">XML 1.0 Well-Formed\n Parsed Entities</a>. The functions can also perform Schema and DTD\n validation of the input documents.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following example parses a sequence of XML elements and returns\n them in a streaming fashion - each at a time:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n import module namespace parse-xml = \"http://www.zorba-xquery.com/modules/xml\";\n import schema namespace opt = \"http://www.zorba-xquery.com/modules/xml-options\";\n parse-xml:parse(\n   \"&lt;from1&gt;Jani&lt;/from1&gt;&lt;from2&gt;Jani&lt;/from2&gt;&lt;from3&gt;Jani&lt;/from3&gt;\",\n   &lt;opt:options&gt;\n     &lt;opt:parse-external-parsed-entity/&gt;\n   &lt;/opt:options&gt;\n )\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Another useful option allows to skip an arbitrary number of levels\n before returning a sequence of nodes as shown in the following example:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n import module namespace parse-xml = \"http://www.zorba-xquery.com/modules/xml\";\n import schema namespace opt = \"http://www.zorba-xquery.com/modules/xml-options\";\n parse-xml:parse(\n   \"&lt;root&gt;\n     &lt;from1&gt;Jani1&lt;/from1&gt;\n     &lt;from2&gt;Jani2&lt;/from2&gt;\n     &lt;from3&gt;Jani3&lt;/from3&gt;\n   &lt;/root&gt;\",\n   &lt;opt:options&gt;\n     &lt;opt:parse-external-parsed-entity opt:skip-root-nodes=\"1\"/&gt;\n   &lt;/opt:options&gt;\n )\n </pre>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/xqdoc" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The goal of xqDoc is to provide a simple vendor neutral solution for\n documenting XQuery modules, as well as tools to generate a user friendly\n presentation of this documentation and cross referencing information.\n Therefore, xqDoc proposes a new commenting convention that extends the\n currently defined XQuery comment style. This convention is modeled\n after Java's Javadoc commenting style, and provides a simple, uniform\n way to document XQuery source code. You can find more information about\n xqDoc on the website of the <a href=\"http://xqdoc.org/\">xqDoc project</a>.\n This library module provides XQDoc utility functions.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Generating a user friendly presentation of the documentation is\n accomplished in the following steps:\n <ol>\n  <li>Module-, variable-, and function declarations need to be commented\n      using the xqDoc commenting conventions. For example, this module\n      contains xqDoc-style comments</li>\n  <li>A xqDoc-enabled processor can parse such documentation and generate\n      a vendor neutral XML document which stores all the information about\n      the code and the comments. Such a document adheres to the xqDoc\n      Schema.</li>\n  <li>The information of an XML document generated by the second step,\n      can be transformed into arbitrary presentation formats\n      (e.g. html).</li>\n </ol>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module implements the first and second step of this process.\n That is, Zorba can parse XQuery modules which are annotated with\n xqDoc-style documentation and generate the vendor neutral\n XML representation.\n </p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/xqdoc2xhtml/error" : { "doc" : " This module defines all errors for the xqdoc2xhtml module.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/xqdoc2xhtml/" : { "doc" : " Function library providing transformation functions from XQDoc to XHTML.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/modules/xsl-fo" : { "doc" : " This module converts <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3schools.com/xslfo/default.asp\">XSL-FO</a> documents\n to various formats such as PDF, EPS, PCL, AFP, Text, PNG, Postscript, RTF, and TIFF.\n For instance, the following example converts a simple XSL-FO document to PDF:\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xquery;\">\n import module namespace fop = \"http://www.zorba-xquery.com/modules/xsl-fo\";\n import module namespace file = \"http://expath.org/ns/file\";\n declare namespace fo = \"http://www.w3.org/1999/XSL/Format\";\n let $xsl-fo := <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n   <fo:layout-master-set>\n     <fo:simple-page-master master-name=\"my-page\">\n       <fo:region-body margin=\"1in\"/>\n     </fo:simple-page-master>\n   </fo:layout-master-set>\n   <fo:page-sequence master-reference=\"my-page\">\n     <fo:flow flow-name=\"xsl-region-body\">\n       <fo:block>Hello, world!</fo:block>\n     </fo:flow>\n   </fo:page-sequence>\n  </fo:root>\n let $pdf := fop:generator($fop:PDF, $xsl-fo)\n return file:write-binary(\"simple.pdf\", $pdf)\n </pre>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module uses Apache-FOP to generate content from an XSL-FO document.\n See <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlgraphics.apache.org/fop/\">the Apache FOP documentation</a> for further information.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note for Windows users</b>: On Windows, this module won't work out of the box, since\n this module uses Java. But the Java VM dll is not in the system path by default. To make\n this module work, you need to add the directory where the jvm.dll is located to the\n system path. This dll is located at JRE_DIR\\bin\\client. On a standard installation, this would\n be something a path like \"C:\\Program Files\\Java\\jre6\\bin\\client\".\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.zorba-xquery.com/warnings" : { "doc" : " This module contains one declaration of a variable for each\n error of the http://www.zorba-xquery.com/warnings namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://expath.org/ns/error" : { "doc" : " This module defines all errors for the http-client module.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://expath.org/ns/file" : { "doc" : " This module implements the file API EXPath specification available at http://expath.org/spec/file\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://expath.org/ns/http-client" : { "doc" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides an implementation of the\n <a href=\"http://expath.org/modules/http-client/\">EXPath Http Client</a>.\n It provides functions for making HTTP requests and is a superset of the\n module specified by EXPath.\n Specifically, it implements the <code>http:send-request()</code> functions\n as specified by EXPath. Moreover, it adds an additional function\n <code>http:read()</code> (with several arities for the sake of ease).\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n In general, both functions take a description of the HTTP request to make\n as parameter, execute the request, and return a representation of the HTTP\n response.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The <code>http:send-request()</code> functions are declared as sequential.\n Sequential functions are allowed to have side effects. For example, most probably,\n an HTTP POST request is a request that has side effects because it adds/changes\n a remote resource. Sequential functions are specified in the\n <a href=\"http://www.w3.org/TR/xquery-sx-10/\">XQuery Scripting Extension</a>,\n which is an extension of XQuery.\n Sequential functions are only allowed to be invoked in certain places (e.g.\n only from functions which are declared as sequential themselves).\n In contrast, the http:read() functions are not declared as sequential -\n they are declared as nondeterministic though, which\n means that several calls may return different results.\n HTTP requests performed using these functions are <b>not</b> allowed to have\n side effects.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The response is returned as a sequence of one or more items. The first\n one is an <code>http:response</code> element with quite the same\n structure as an http:request, but without the content itself.\n The content is returned as the second item (or several items in case of\n a multipart response) as a string, a document node, or a binary item.\n This depends on the content-type returned.\n Specifically, the rules are as follows:\n <ul>\n  <li>A document node is returned if the media type has a MIME type of\n     text/xml, application/xml, text/xml-external-parsed-entity, or\n     application/xml-external-parsed-entity, as defined in [RFC 3023]\n     (except that application/xml-dtd is considered a text media type).\n     MIME types ending by +xml are also XML media types.</li>\n  <li>A document node is returned if the media type has a MIME type of\n      text/html. In order to be able to make HTML parseable, tidy is automatically\n      invoked. If you want to prevent that, you can also set your own content-type\n      by setting the override-media-type attribute in the request element.\n       For tidying, the following <a href=\"http://tidy.sourceforge.net/docs/quickref.html\">options</a>\n       will be used:\n       <ul>\n         <li>TidyXmlOut=yes</li>\n         <li>TidyDoctypeMode=TidyDoctypeOmit</li>\n         <li>TidyQuoteNbsp=yes</li>\n         <li>TidyCharEncoding=\"utf8\"</li>\n         <li>TidyNewline=\"LF\"</li>\n       </ul>\n  </li>\n  <li>An xs:string item is returned if the media type has a text MIME type,\n     i.e. beginning with text/.</li>\n  <li>An xs:base64Binary item is returned for all the other media types.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The structure of a request element is defined in the schema that is imported\n by this module. The details are described in the\n <a href=\"http://expath.org/spec/http-client#d2e183\">specification</a>.\n Analogously, the response element is also described in this\n <a href=\"http://expath.org/spec/http-client#d2e491\">specification</a>.\n </p>\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.jsoniq.org/errors" : { "doc" : " This module contains one declaration of a variable for each\n error of the http://www.jsoniq.org/errors namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.jsoniq.org/functions" : { "doc" : " This module provides the functions defined by the JSONiq specification,\n sections 1.7 (Functions) and 1.10 (Update Primitives). JSONiq extends\n the XQuery specification to also deal with JSON data natively. See\n     http://www.jsoniq.org/\n for details.\n This module depends on having the JSONiq feature enabled in Zorba,\n i.e., Zorba must be compiled with ZORBA_WITH_JSON.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.w3.org/2005/xpath-functions/math" : { "doc" : " This module contains all the functions part of the\n W3C XPath and XQuery Functions and Operators 3.0\n section \"4.7 Trigonometric and exponential functions\".\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.w3.org/2005/xpath-functions" : { "doc" : " This module contains all the functions specified in the\n W3C XPath and XQuery Functions and Operators 3.0.\n", "docUrl" : "http://www.28msec.com/modules/" }, "http://www.w3.org/2005/xqt-errors" : { "doc" : " This module contains one declaration of a variable for each\n error of the http://www.w3.org/2005/xqt-errors namespace.\n The variables serves as documentation for the errors but can also\n be used in the code. For example, one useful scenario is to compare\n an error caught in the catch clause of a try-catch expression with one of\n the variables.\n", "docUrl" : "http://www.28msec.com/modules/" } }